language: minimal

services: docker

env:
  - DOCKER_COMPOSE_VERSION=1.25.5

before_install:
  # setup docker-compose
  - docker -v && docker-compose -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

  # install kubectl
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl

  # install aws-iam-authenticator
  - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator
  - chmod +x ./aws-iam-authenticator
  - sudo mv ./aws-iam-authenticator /usr/local/bin/

  # setup kubeconfig
  - mkdir ${HOME}/.kube
  - cp udacity-c3-deployment/eks/kubeconfig-template.yaml ${HOME}/.kube/config
  - kubectl config set clusters.udagram.eu-west-1.eksctl.io.certificate-authority-data "$CERTIFICATE"
  - kubectl config set clusters.udagram.eu-west-1.eksctl.io.server "$ENDPOINT"

jobs:
  include:
    - stage: dockerize
      script: 
        # create and push the docker containers
        - cd udacity-c3-deployment/docker
        - docker-compose -f docker-compose-build.yaml build --parallel --no-cache
        - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_LOGIN" --password-stdin
        - docker-compose -f docker-compose-build.yaml push

        # now deploy to dockerhub
        - cd udacity-c3-deployment/docker
        - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_LOGIN" --password-stdin
        - docker-compose -f docker-compose-build.yaml push          

    - stage: aws_eks_deploy
      script: 
        # now deploy to kubernetes 
        - cd udacity-c3-deployment/k8s
        - kubectl apply -f backend-feed-service.yaml
        - kubectl apply -f backend-user-service.yaml
        - kubectl apply -f frontend-service.yaml
        - kubectl apply -f reverseproxy-service.yaml
        - kubectl apply -f aws-secret.yaml
        - kubectl apply -f env-configmap.yaml
        - kubectl apply -f env-secret.yaml
        - kubectl apply -f backend-feed-deployment.yaml
        - kubectl apply -f backend-user-deployment.yaml
        - kubectl apply -f frontend-deployment.yaml
        - kubectl apply -f reverseproxy-deployment.yaml

# safelist
branches:
  only:
  - master